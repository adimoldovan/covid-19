{"ast":null,"code":"import _classCallCheck from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import DataService from'./data-service';import{Card,CardDeck,Col,Container,Row}from'react-bootstrap';import Utils from'./utils';import{Area,AreaChart,Bar,BarChart,CartesianGrid,ComposedChart,Legend,Line,ResponsiveContainer,Tooltip,XAxis,YAxis}from'recharts';import ReactEcharts from'echarts-for-react';import BootstrapTable from'react-bootstrap-table-next';import'echarts/map/js/world.js';import'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';import'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.js';import filterFactory,{textFilter}from'react-bootstrap-table2-filter';import ToolkitProvider,{ColumnToggle}from'react-bootstrap-table2-toolkit';var Countries=/*#__PURE__*/function(_Component){_inherits(Countries,_Component);var _super=_createSuper(Countries);function Countries(){_classCallCheck(this,Countries);return _super.apply(this,arguments);}_createClass(Countries,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){var data=DataService.getVerboseData();var world=data.find(function(c){return c.name==='World';});data.pop(world);var activeRate=(world.summary.active.total/world.summary.confirmed.total*100).toFixed(1);var recoveredRateTotal=(world.summary.recovered.total/world.summary.confirmed.total*100).toFixed(1);var recoveredRateClosed=(world.summary.recovered.total/world.summary.closed.total*100).toFixed(1);var deathRateTotal=(world.summary.deaths.total/world.summary.confirmed.total*100).toFixed(1);var deathRateClosed=(world.summary.deaths.total/world.summary.closed.total*100).toFixed(1);var mapData=[];var nameTranslator={'US':'United States','South Sudan':'S. Sudan','Western Sahara':'W. Sahara','Cote d\\'Ivoire':'Cote d\\'Ivoire','Central African Republic':'Central African Rep.','Congo (Kinshasa)':'Dem. Rep. Congo','Congo (Brazzaville)':'Congo','Czechia':'Czech Rep.','Bosnia and Herzegovina':'Bosnia and Herz.','North Macedonia':'Macedonia','Korea, South':'Korea','Dominican Republic':'Dominican Rep.','Laos':'Lao PDR','Burma':'Myanmar'};data.forEach(function(country){var nameMatch=nameTranslator[country.name];var translatedName=nameMatch?nameMatch:country.name;var countryMapData={name:translatedName,value:country.summary.confirmed.total1Mil};mapData.push(countryMapData);});var option={title:{text:'Total confirmed cases / 1 mil population',left:'center'},toolbox:{show:true,orient:'vertical',left:'right',top:'center',feature:{dataZoom:{show:false,title:{zoom:'Area zooming',back:'Restore area zooming'}}}},tooltip:{trigger:'item'},visualMap:{left:'left',min:50,max:10000,inRange:{color:['#f5f5f5','#a50026']},text:['50','1 000'],calculable:true},series:[{name:'Confirmed cases / 1 mil. pop.',type:'map',mapType:'world',roam:'move',zoom:1.1,emphasis:{itemStyle:{areaColor:'yellow'}},label:{normal:{show:false},emphasis:{show:false}},data:mapData}]};function countryLink(countryName){return/*#__PURE__*/React.createElement(\"a\",{href:\"#/\"+countryName,target:\"_blank\",rel:\"noopener noreferrer\"},countryName);}function sortCaret(order){if(!order)return/*#__PURE__*/React.createElement(\"span\",{className:\"order\"},\"\\xA0\");else if(order==='asc')return/*#__PURE__*/React.createElement(\"span\",{className:\"caret-asc\"},\"\\xA0\");else if(order==='desc')return/*#__PURE__*/React.createElement(\"span\",{className:\"caret-desc\"},\"\\xA0\");return null;}var ToggleList=ColumnToggle.ToggleList;var columns=[{dataField:'name',text:'Country',sort:true,filter:textFilter({placeholder:'filter',style:{backgroundColor:'#f5f5f5',border:0,margin:5,color:'#d3d3d3',fontStyle:'italic'}}),align:'left',formatter:countryLink,sortCaret:sortCaret},{dataField:'summary.confirmed.total',text:'Total cases',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.confirmed.total1Mil',text:'Total cases/1M pop.',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.confirmed.new',text:'New cases',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.confirmed.new1Mil',text:'New cases/1M pop.',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.active.total',text:'Active cases',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.active.total1Mil',text:'Active cases/1M pop.',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.deaths.total',text:'Total deceased',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.deaths.total1Mil',text:'Deceased/1M pop.',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.deaths.new',text:'Deceased new',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.deaths.new1Mil',text:'Deceased new/1M pop.',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.recovered.total',text:'Recovered',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'summary.recovered.new',text:'Recovered new',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret},{dataField:'population',text:'Population',sort:true,align:'right',formatter:Utils.formattedNumber,sortCaret:sortCaret}];var defaultSorted=[{dataField:'summary.confirmed.total',order:'desc'}];return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-between header\"},/*#__PURE__*/React.createElement(Col,{className:\"text-left\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19\")),/*#__PURE__*/React.createElement(Col,{className:\"text-right\"},/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/CSSEGISandData/COVID-19\",target:\"_blank\",rel:\"noopener noreferrer\"},\"data source\"))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Container,{fluid:true,id:\"summary\"},/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{backgroundColor:Utils.CONFIRMED_COLOR,color:\"#333\"}},\"Confirmed\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,Utils.formattedNumber(world.summary.confirmed.total),/*#__PURE__*/React.createElement(\"br\",null),\"\\xA0\",/*#__PURE__*/React.createElement(\"br\",null),\"\\xA0\"),/*#__PURE__*/React.createElement(ResponsiveContainer,{height:30},/*#__PURE__*/React.createElement(AreaChart,{data:world.timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(Area,{dataKey:\"confirmedNew\",stroke:\"none\",fill:Utils.CONFIRMED_COLOR}))))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{backgroundColor:Utils.ACTIVE_COLOR,color:\"#333\"}},\"Active\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,Utils.formattedNumber(world.summary.active.total),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},activeRate,\"% out of total\"),/*#__PURE__*/React.createElement(\"br\",null),\"\\xA0\"),/*#__PURE__*/React.createElement(ResponsiveContainer,{height:30},/*#__PURE__*/React.createElement(AreaChart,{data:world.timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(Area,{dataKey:\"activeTotal\",fill:Utils.ACTIVE_COLOR,stroke:\"none\"}))))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{backgroundColor:Utils.RECOVERED_COLOR,color:\"#333\"}},\"Recovered\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,Utils.formattedNumber(world.summary.recovered.total),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},recoveredRateTotal,\"% out of total\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},recoveredRateClosed,\"% out of closed\")),/*#__PURE__*/React.createElement(ResponsiveContainer,{height:30},/*#__PURE__*/React.createElement(AreaChart,{data:world.timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(Area,{dataKey:\"recoveredNew\",fill:Utils.RECOVERED_COLOR,stroke:\"none\"}))))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{backgroundColor:Utils.DECEASED_COLOR,color:\"#fff\"}},\"Deceased\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,Utils.formattedNumber(world.summary.deaths.total),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},deathRateTotal,\"% out of total\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},deathRateClosed,\"% out of closed\")),/*#__PURE__*/React.createElement(ResponsiveContainer,{height:30},/*#__PURE__*/React.createElement(AreaChart,{data:world.timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(Area,{dataKey:\"deathsNew\",fill:Utils.DECEASED_COLOR,stroke:\"none\"}))))))),/*#__PURE__*/React.createElement(Container,{fluid:true,id:\"charts\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ReactEcharts,{option:option||{},style:{height:'550px',width:'100%'},className:\"react_for_echarts\"}),/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,{border:\"light\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(ComposedChart,{data:world.timeline,style:{margin:\"0 auto\"},fontSize:10},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"date\"}),/*#__PURE__*/React.createElement(YAxis,null),/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,{verticalAlign:\"bottom\",height:36}),/*#__PURE__*/React.createElement(Area,{name:\"total confirmed\",type:\"monotone\",dataKey:\"confirmedTotal\",stroke:\"none\",fillOpacity:0.5,fill:Utils.CONFIRMED_COLOR}),/*#__PURE__*/React.createElement(Line,{name:\"total active\",dot:false,dataKey:\"activeTotal\",stroke:Utils.ACTIVE_COLOR,strokeWidth:\"2\"}))))),/*#__PURE__*/React.createElement(Card,{border:\"light\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(BarChart,{width:730,height:250,data:world.timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"date\"}),/*#__PURE__*/React.createElement(YAxis,{domain:[0,'dataMax+1']}),/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,{verticalAlign:\"bottom\",height:36}),/*#__PURE__*/React.createElement(Bar,{name:\"daily confirmed\",type:\"monotone\",dataKey:\"confirmedNew\",stroke:\"none\",fill:Utils.CONFIRMED_COLOR}))))))))),/*#__PURE__*/React.createElement(Container,{fluid:true,id:\"countries\"},/*#__PURE__*/React.createElement(ToolkitProvider,{keyField:\"name\",data:data,columns:columns,columnToggle:true},function(props){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ToggleList,Object.assign({contextual:\"light\"},props.columnToggleProps)),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(BootstrapTable,Object.assign({},props.baseProps,{filter:filterFactory(),hover:true,bordered:false,defaultSorted:defaultSorted})));}),/*#__PURE__*/React.createElement(\"div\",null,\"Data source: \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/CSSEGISandData/COVID-19\"},\"https://github.com/CSSEGISandData/COVID-19\"))));}}]);return Countries;}(Component);export{Countries as default};","map":{"version":3,"sources":["/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/src/countries.jsx"],"names":["React","Component","DataService","Card","CardDeck","Col","Container","Row","Utils","Area","AreaChart","Bar","BarChart","CartesianGrid","ComposedChart","Legend","Line","ResponsiveContainer","Tooltip","XAxis","YAxis","ReactEcharts","BootstrapTable","filterFactory","textFilter","ToolkitProvider","ColumnToggle","Countries","data","getVerboseData","world","find","c","name","pop","activeRate","summary","active","total","confirmed","toFixed","recoveredRateTotal","recovered","recoveredRateClosed","closed","deathRateTotal","deaths","deathRateClosed","mapData","nameTranslator","forEach","country","nameMatch","translatedName","countryMapData","value","total1Mil","push","option","title","text","left","toolbox","show","orient","top","feature","dataZoom","zoom","back","tooltip","trigger","visualMap","min","max","inRange","color","calculable","series","type","mapType","roam","emphasis","itemStyle","areaColor","label","normal","countryLink","countryName","sortCaret","order","ToggleList","columns","dataField","sort","filter","placeholder","style","backgroundColor","border","margin","fontStyle","align","formatter","formattedNumber","defaultSorted","CONFIRMED_COLOR","timeline","ACTIVE_COLOR","RECOVERED_COLOR","DECEASED_COLOR","height","width","props","columnToggleProps","baseProps"],"mappings":"wrBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAAQC,IAAR,CAAcC,QAAd,CAAwBC,GAAxB,CAA6BC,SAA7B,CAAwCC,GAAxC,KAAkD,iBAAlD,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OACIC,IADJ,CAEIC,SAFJ,CAGIC,GAHJ,CAIIC,QAJJ,CAKIC,aALJ,CAMIC,aANJ,CAOIC,MAPJ,CAQIC,IARJ,CASIC,mBATJ,CAUIC,OAVJ,CAWIC,KAXJ,CAYIC,KAZJ,KAaO,UAbP,CAcA,MAAOC,CAAAA,YAAP,KAAyB,mBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CAEA,MAAO,yBAAP,CACA,MAAO,4EAAP,CACA,MAAO,uEAAP,CACA,MAAOC,CAAAA,aAAP,EAAuBC,UAAvB,KAAwC,+BAAxC,CACA,MAAOC,CAAAA,eAAP,EAAyBC,YAAzB,KAA4C,gCAA5C,C,GAEqBC,CAAAA,S,mRACG,CAEnB,C,uCAEQ,CACL,GAAIC,CAAAA,IAAI,CAAG1B,WAAW,CAAC2B,cAAZ,EAAX,CACA,GAAIC,CAAAA,KAAK,CAAGF,IAAI,CAACG,IAAL,CAAU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,GAAW,OAAf,EAAX,CAAZ,CACAL,IAAI,CAACM,GAAL,CAASJ,KAAT,EAEA,GAAIK,CAAAA,UAAU,CAAG,CAACL,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAArB,CAA6BR,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBD,KAArD,CAA6D,GAA9D,EAAmEE,OAAnE,CAA2E,CAA3E,CAAjB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,CAACX,KAAK,CAACM,OAAN,CAAcM,SAAd,CAAwBJ,KAAxB,CAAgCR,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBD,KAAxD,CAAgE,GAAjE,EAAsEE,OAAtE,CAA8E,CAA9E,CAAzB,CACA,GAAIG,CAAAA,mBAAmB,CAAG,CAACb,KAAK,CAACM,OAAN,CAAcM,SAAd,CAAwBJ,KAAxB,CAAgCR,KAAK,CAACM,OAAN,CAAcQ,MAAd,CAAqBN,KAArD,CAA6D,GAA9D,EAAmEE,OAAnE,CAA2E,CAA3E,CAA1B,CACA,GAAIK,CAAAA,cAAc,CAAG,CAACf,KAAK,CAACM,OAAN,CAAcU,MAAd,CAAqBR,KAArB,CAA6BR,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBD,KAArD,CAA6D,GAA9D,EAAmEE,OAAnE,CAA2E,CAA3E,CAArB,CACA,GAAIO,CAAAA,eAAe,CAAG,CAACjB,KAAK,CAACM,OAAN,CAAcU,MAAd,CAAqBR,KAArB,CAA6BR,KAAK,CAACM,OAAN,CAAcQ,MAAd,CAAqBN,KAAlD,CAA0D,GAA3D,EAAgEE,OAAhE,CAAwE,CAAxE,CAAtB,CAEA,GAAIQ,CAAAA,OAAO,CAAG,EAAd,CAEA,GAAIC,CAAAA,cAAc,CAAG,CACjB,KAAM,eADW,CAEjB,cAAe,UAFE,CAGjB,iBAAkB,WAHD,CAIjB,iBAAkB,gBAJD,CAKjB,2BAA4B,sBALX,CAMjB,mBAAoB,iBANH,CAOjB,sBAAuB,OAPN,CAQjB,UAAW,YARM,CASjB,yBAA0B,kBATT,CAUjB,kBAAmB,WAVF,CAWjB,eAAgB,OAXC,CAYjB,qBAAsB,gBAZL,CAajB,OAAQ,SAbS,CAcjB,QAAS,SAdQ,CAArB,CAiBArB,IAAI,CAACsB,OAAL,CAAa,SAAUC,OAAV,CAAmB,CAC5B,GAAIC,CAAAA,SAAS,CAAGH,cAAc,CAACE,OAAO,CAAClB,IAAT,CAA9B,CACA,GAAIoB,CAAAA,cAAc,CAAID,SAAD,CAAcA,SAAd,CAA0BD,OAAO,CAAClB,IAAvD,CACA,GAAIqB,CAAAA,cAAc,CAAG,CACjBrB,IAAI,CAAEoB,cADW,CAEjBE,KAAK,CAAEJ,OAAO,CAACf,OAAR,CAAgBG,SAAhB,CAA0BiB,SAFhB,CAArB,CAIAR,OAAO,CAACS,IAAR,CAAaH,cAAb,EACH,CARD,EAUA,GAAII,CAAAA,MAAM,CAAG,CACTC,KAAK,CAAE,CACHC,IAAI,CAAE,0CADH,CAEHC,IAAI,CAAE,QAFH,CADE,CAKTC,OAAO,CAAE,CACLC,IAAI,CAAE,IADD,CAELC,MAAM,CAAE,UAFH,CAGLH,IAAI,CAAE,OAHD,CAILI,GAAG,CAAE,QAJA,CAKLC,OAAO,CAAE,CACLC,QAAQ,CAAE,CACNJ,IAAI,CAAE,KADA,CAENJ,KAAK,CAAE,CACHS,IAAI,CAAE,cADH,CAEHC,IAAI,CAAE,sBAFH,CAFD,CADL,CALJ,CALA,CAoBTC,OAAO,CAAE,CACLC,OAAO,CAAE,MADJ,CApBA,CAuBTC,SAAS,CAAE,CACPX,IAAI,CAAE,MADC,CAEPY,GAAG,CAAE,EAFE,CAGPC,GAAG,CAAE,KAHE,CAIPC,OAAO,CAAE,CACLC,KAAK,CAAE,CAAC,SAAD,CAAY,SAAZ,CADF,CAJF,CAOPhB,IAAI,CAAE,CAAC,IAAD,CAAO,OAAP,CAPC,CAQPiB,UAAU,CAAE,IARL,CAvBF,CAiCTC,MAAM,CAAE,CACJ,CACI7C,IAAI,CAAE,+BADV,CAEI8C,IAAI,CAAE,KAFV,CAGIC,OAAO,CAAE,OAHb,CAIIC,IAAI,CAAE,MAJV,CAKIb,IAAI,CAAE,GALV,CAMIc,QAAQ,CAAE,CAACC,SAAS,CAAE,CAACC,SAAS,CAAE,QAAZ,CAAZ,CANd,CAOIC,KAAK,CAAE,CACHC,MAAM,CAAE,CACJvB,IAAI,CAAE,KADF,CADL,CAIHmB,QAAQ,CAAE,CACNnB,IAAI,CAAE,KADA,CAJP,CAPX,CAeInC,IAAI,CAAEoB,OAfV,CADI,CAjCC,CAAb,CAsDA,QAASuC,CAAAA,WAAT,CAAqBC,WAArB,CAAkC,CAC9B,mBAAO,yBAAG,IAAI,CAAE,KAAOA,WAAhB,CAA6B,MAAM,CAAC,QAApC,CAA6C,GAAG,CAAC,qBAAjD,EAAwEA,WAAxE,CAAP,CACH,CAED,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB,GAAI,CAACA,KAAL,CAAY,mBAAQ,4BAAM,SAAS,CAAC,OAAhB,SAAR,CAAZ,IACK,IAAIA,KAAK,GAAK,KAAd,CAAqB,mBAAQ,4BAAM,SAAS,CAAC,WAAhB,SAAR,CAArB,IACA,IAAIA,KAAK,GAAK,MAAd,CAAsB,mBAAQ,4BAAM,SAAS,CAAC,YAAhB,SAAR,CAC3B,MAAO,KAAP,CACH,CAvGI,GAyGEC,CAAAA,UAzGF,CAyGgBjE,YAzGhB,CAyGEiE,UAzGF,CA2GL,GAAMC,CAAAA,OAAO,CAAG,CAAC,CACbC,SAAS,CAAE,MADE,CAEbjC,IAAI,CAAE,SAFO,CAGbkC,IAAI,CAAE,IAHO,CAIbC,MAAM,CAAEvE,UAAU,CAAC,CACfwE,WAAW,CAAE,QADE,CAEfC,KAAK,CAAE,CACHC,eAAe,CAAE,SADd,CAEHC,MAAM,CAAE,CAFL,CAGHC,MAAM,CAAE,CAHL,CAIHxB,KAAK,CAAE,SAJJ,CAKHyB,SAAS,CAAE,QALR,CAFQ,CAAD,CAJL,CAcbC,KAAK,CAAE,MAdM,CAebC,SAAS,CAAEhB,WAfE,CAgBbE,SAAS,CAAEA,SAhBE,CAAD,CAiBb,CACCI,SAAS,CAAE,yBADZ,CAECjC,IAAI,CAAE,aAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAjBa,CAwBb,CACCI,SAAS,CAAE,6BADZ,CAECjC,IAAI,CAAE,qBAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAxBa,CA+Bb,CACCI,SAAS,CAAE,uBADZ,CAECjC,IAAI,CAAE,WAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CA/Ba,CAsCb,CACCI,SAAS,CAAE,2BADZ,CAECjC,IAAI,CAAE,mBAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAtCa,CA6Cb,CACCI,SAAS,CAAE,sBADZ,CAECjC,IAAI,CAAE,cAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CA7Ca,CAoDb,CACCI,SAAS,CAAE,0BADZ,CAECjC,IAAI,CAAE,sBAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CApDa,CA2Db,CACCI,SAAS,CAAE,sBADZ,CAECjC,IAAI,CAAE,gBAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CA3Da,CAkEb,CACCI,SAAS,CAAE,0BADZ,CAECjC,IAAI,CAAE,kBAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAlEa,CAyEb,CACCI,SAAS,CAAE,oBADZ,CAECjC,IAAI,CAAE,cAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAzEa,CAgFb,CACCI,SAAS,CAAE,wBADZ,CAECjC,IAAI,CAAE,sBAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAhFa,CAuFb,CACCI,SAAS,CAAE,yBADZ,CAECjC,IAAI,CAAE,WAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CAvFa,CA8Fb,CACCI,SAAS,CAAE,uBADZ,CAECjC,IAAI,CAAE,eAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CA9Fa,CAqGb,CACCI,SAAS,CAAE,YADZ,CAECjC,IAAI,CAAE,YAFP,CAGCkC,IAAI,CAAE,IAHP,CAICQ,KAAK,CAAE,OAJR,CAKCC,SAAS,CAAE/F,KAAK,CAACgG,eALlB,CAMCf,SAAS,CAAEA,SANZ,CArGa,CAAhB,CA8GA,GAAMgB,CAAAA,aAAa,CAAG,CAAC,CACnBZ,SAAS,CAAE,yBADQ,CAEnBH,KAAK,CAAE,MAFY,CAAD,CAAtB,CAKA,mBACI,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,gCAAf,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,WAAf,eAA2B,yCAA3B,CADJ,cAEI,oBAAC,GAAD,EAAK,SAAS,CAAC,YAAf,eAA4B,yBAAG,IAAI,CAAC,4CAAR,CAAqD,MAAM,CAAC,QAA5D,CACG,GAAG,CAAC,qBADP,gBAA5B,CAFJ,CADJ,cAMI,8BANJ,cAOI,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,EAAE,CAAC,SAApB,eACI,oBAAC,QAAD,mBACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,EACI,KAAK,CAAE,CAACQ,eAAe,CAAE1F,KAAK,CAACkG,eAAxB,CAAyC9B,KAAK,CAAE,MAAhD,CADX,cADJ,cAGI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,MACKpE,KAAK,CAACgG,eAAN,CAAsB1E,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBD,KAA9C,CADL,cAC0D,8BAD1D,qBACqE,8BADrE,QADJ,cAII,oBAAC,mBAAD,EAAqB,MAAM,CAAE,EAA7B,eACI,oBAAC,SAAD,EAAW,IAAI,CAAER,KAAK,CAAC6E,QAAvB,CAAiC,KAAK,CAAE,CAACP,MAAM,CAAE,QAAT,CAAxC,eACI,oBAAC,IAAD,EAAM,OAAO,CAAC,cAAd,CAA6B,MAAM,CAAC,MAApC,CAA2C,IAAI,CAAE5F,KAAK,CAACkG,eAAvD,EADJ,CADJ,CAJJ,CAHJ,CADJ,cAeI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,EACI,KAAK,CAAE,CAACR,eAAe,CAAE1F,KAAK,CAACoG,YAAxB,CAAsChC,KAAK,CAAE,MAA7C,CADX,WADJ,cAGI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,MACKpE,KAAK,CAACgG,eAAN,CAAsB1E,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAA3C,CADL,cACuD,8BADvD,cAC4D,6BACxD,SAAS,CAAC,YAD8C,EAChCH,UADgC,kBAD5D,cAE6D,8BAF7D,QADJ,cAKI,oBAAC,mBAAD,EAAqB,MAAM,CAAE,EAA7B,eACI,oBAAC,SAAD,EAAW,IAAI,CAAEL,KAAK,CAAC6E,QAAvB,CAAiC,KAAK,CAAE,CAACP,MAAM,CAAE,QAAT,CAAxC,eACI,oBAAC,IAAD,EAAM,OAAO,CAAC,aAAd,CAA4B,IAAI,CAAE5F,KAAK,CAACoG,YAAxC,CAAsD,MAAM,CAAC,MAA7D,EADJ,CADJ,CALJ,CAHJ,CAfJ,cA8BI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,EACI,KAAK,CAAE,CAACV,eAAe,CAAE1F,KAAK,CAACqG,eAAxB,CAAyCjC,KAAK,CAAE,MAAhD,CADX,cADJ,cAGI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,MACKpE,KAAK,CAACgG,eAAN,CAAsB1E,KAAK,CAACM,OAAN,CAAcM,SAAd,CAAwBJ,KAA9C,CADL,cAC0D,8BAD1D,cAC+D,6BAC3D,SAAS,CAAC,YADiD,EACnCG,kBADmC,kBAD/D,cAEqE,8BAFrE,cAE0E,6BACtE,SAAS,CAAC,YAD4D,EAC9CE,mBAD8C,mBAF1E,CADJ,cAMI,oBAAC,mBAAD,EAAqB,MAAM,CAAE,EAA7B,eACI,oBAAC,SAAD,EAAW,IAAI,CAAEb,KAAK,CAAC6E,QAAvB,CAAiC,KAAK,CAAE,CAACP,MAAM,CAAE,QAAT,CAAxC,eACI,oBAAC,IAAD,EAAM,OAAO,CAAC,cAAd,CAA6B,IAAI,CAAE5F,KAAK,CAACqG,eAAzC,CAA0D,MAAM,CAAC,MAAjE,EADJ,CADJ,CANJ,CAHJ,CA9BJ,cA8CI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,EACI,KAAK,CAAE,CAACX,eAAe,CAAE1F,KAAK,CAACsG,cAAxB,CAAwClC,KAAK,CAAE,MAA/C,CADX,aADJ,cAGI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,MACKpE,KAAK,CAACgG,eAAN,CAAsB1E,KAAK,CAACM,OAAN,CAAcU,MAAd,CAAqBR,KAA3C,CADL,cACuD,8BADvD,cAC4D,6BACxD,SAAS,CAAC,YAD8C,EAChCO,cADgC,kBAD5D,cAEiE,8BAFjE,cAEsE,6BAClE,SAAS,CAAC,YADwD,EAC1CE,eAD0C,mBAFtE,CADJ,cAMI,oBAAC,mBAAD,EAAqB,MAAM,CAAE,EAA7B,eACI,oBAAC,SAAD,EAAW,IAAI,CAAEjB,KAAK,CAAC6E,QAAvB,CAAiC,KAAK,CAAE,CAACP,MAAM,CAAE,QAAT,CAAxC,eACI,oBAAC,IAAD,EAAM,OAAO,CAAC,WAAd,CAA0B,IAAI,CAAE5F,KAAK,CAACsG,cAAtC,CAAsD,MAAM,CAAC,MAA7D,EADJ,CADJ,CANJ,CAHJ,CA9CJ,CADJ,CAPJ,cAwEI,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,EAAE,CAAC,QAApB,eACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,YAAD,EACI,MAAM,CAAEpD,MAAM,EAAI,EADtB,CAEI,KAAK,CAAE,CAACqD,MAAM,CAAE,OAAT,CAAkBC,KAAK,CAAE,MAAzB,CAFX,CAGI,SAAS,CAAC,mBAHd,EADJ,cAKI,oBAAC,QAAD,mBACI,oBAAC,IAAD,EAAM,MAAM,CAAC,OAAb,eACI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,mBAAD,EAAqB,MAAM,CAAE,GAA7B,eACI,oBAAC,aAAD,EAAe,IAAI,CAAElF,KAAK,CAAC6E,QAA3B,CAAqC,KAAK,CAAE,CAACP,MAAM,CAAE,QAAT,CAA5C,CACe,QAAQ,CAAE,EADzB,eAEI,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAFJ,cAGI,oBAAC,KAAD,MAHJ,cAII,oBAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAJJ,cAKI,oBAAC,OAAD,MALJ,cAMI,oBAAC,MAAD,EAAQ,aAAa,CAAC,QAAtB,CAA+B,MAAM,CAAE,EAAvC,EANJ,cAOI,oBAAC,IAAD,EAAM,IAAI,CAAC,iBAAX,CAA6B,IAAI,CAAC,UAAlC,CAA6C,OAAO,CAAC,gBAArD,CACM,MAAM,CAAC,MADb,CAEM,WAAW,CAAE,GAFnB,CAEwB,IAAI,CAAE5F,KAAK,CAACkG,eAFpC,EAPJ,cAUI,oBAAC,IAAD,EAAM,IAAI,CAAC,cAAX,CAA0B,GAAG,CAAE,KAA/B,CAAsC,OAAO,CAAC,aAA9C,CACM,MAAM,CAAElG,KAAK,CAACoG,YADpB,CACkC,WAAW,CAAC,GAD9C,EAVJ,CADJ,CADJ,CADJ,CADJ,cAoBI,oBAAC,IAAD,EAAM,MAAM,CAAC,OAAb,eACI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,mBAAD,EAAqB,MAAM,CAAE,GAA7B,eACI,oBAAC,QAAD,EAAU,KAAK,CAAE,GAAjB,CAAsB,MAAM,CAAE,GAA9B,CAAmC,IAAI,CAAE9E,KAAK,CAAC6E,QAA/C,CACU,KAAK,CAAE,CAACP,MAAM,CAAE,QAAT,CADjB,eAEI,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAFJ,cAGI,oBAAC,KAAD,EAAO,MAAM,CAAE,CAAC,CAAD,CAAI,WAAJ,CAAf,EAHJ,cAII,oBAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAJJ,cAKI,oBAAC,OAAD,MALJ,cAMI,oBAAC,MAAD,EAAQ,aAAa,CAAC,QAAtB,CAA+B,MAAM,CAAE,EAAvC,EANJ,cAOI,oBAAC,GAAD,EAAK,IAAI,CAAC,iBAAV,CAA4B,IAAI,CAAC,UAAjC,CAA4C,OAAO,CAAC,cAApD,CACK,MAAM,CAAC,MADZ,CAEK,IAAI,CAAE5F,KAAK,CAACkG,eAFjB,EAPJ,CADJ,CADJ,CADJ,CApBJ,CALJ,CADJ,CADJ,CAxEJ,cAwHI,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,EAAE,CAAC,WAApB,eACI,oBAAC,eAAD,EACI,QAAQ,CAAC,MADb,CAEI,IAAI,CAAE9E,IAFV,CAGI,OAAO,CAAEgE,OAHb,CAII,YAAY,KAJhB,EAMQ,SAAAqB,KAAK,qBACD,4CACI,oBAAC,UAAD,gBACI,UAAU,CAAC,OADf,EAEQA,KAAK,CAACC,iBAFd,EADJ,cAII,8BAJJ,cAKI,oBAAC,cAAD,kBACQD,KAAK,CAACE,SADd,EAEI,MAAM,CAAE5F,aAAa,EAFzB,CAGI,KAAK,KAHT,CAII,QAAQ,CAAE,KAJd,CAKI,aAAa,CAAEkF,aALnB,GALJ,CADC,EANb,CADJ,cAwBI,4DAAkB,yBACd,IAAI,CAAC,4CADS,+CAAlB,CAxBJ,CAxHJ,CADJ,CAuJH,C,uBA1XkCxG,S,SAAlB0B,S","sourcesContent":["import React, {Component} from 'react';\nimport DataService from './data-service';\nimport {Card, CardDeck, Col, Container, Row} from 'react-bootstrap';\nimport Utils from './utils';\nimport {\n    Area,\n    AreaChart,\n    Bar,\n    BarChart,\n    CartesianGrid,\n    ComposedChart,\n    Legend,\n    Line,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis\n} from 'recharts';\nimport ReactEcharts from 'echarts-for-react';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport 'echarts/map/js/world.js';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.js';\nimport filterFactory, {textFilter} from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, {ColumnToggle} from 'react-bootstrap-table2-toolkit';\n\nexport default class Countries extends Component {\n    componentDidMount() {\n\n    }\n\n    render() {\n        let data = DataService.getVerboseData()\n        let world = data.find(c => c.name === 'World');\n        data.pop(world);\n\n        let activeRate = (world.summary.active.total / world.summary.confirmed.total * 100).toFixed(1);\n        let recoveredRateTotal = (world.summary.recovered.total / world.summary.confirmed.total * 100).toFixed(1);\n        let recoveredRateClosed = (world.summary.recovered.total / world.summary.closed.total * 100).toFixed(1);\n        let deathRateTotal = (world.summary.deaths.total / world.summary.confirmed.total * 100).toFixed(1);\n        let deathRateClosed = (world.summary.deaths.total / world.summary.closed.total * 100).toFixed(1);\n\n        let mapData = [];\n\n        let nameTranslator = {\n            'US': 'United States',\n            'South Sudan': 'S. Sudan',\n            'Western Sahara': 'W. Sahara',\n            'Cote d\\'Ivoire': 'Cote d\\'Ivoire',\n            'Central African Republic': 'Central African Rep.',\n            'Congo (Kinshasa)': 'Dem. Rep. Congo',\n            'Congo (Brazzaville)': 'Congo',\n            'Czechia': 'Czech Rep.',\n            'Bosnia and Herzegovina': 'Bosnia and Herz.',\n            'North Macedonia': 'Macedonia',\n            'Korea, South': 'Korea',\n            'Dominican Republic': 'Dominican Rep.',\n            'Laos': 'Lao PDR',\n            'Burma': 'Myanmar'\n        }\n\n        data.forEach(function (country) {\n            let nameMatch = nameTranslator[country.name]\n            let translatedName = (nameMatch) ? nameMatch : country.name\n            let countryMapData = {\n                name: translatedName,\n                value: country.summary.confirmed.total1Mil\n            };\n            mapData.push(countryMapData);\n        });\n\n        let option = {\n            title: {\n                text: 'Total confirmed cases / 1 mil population',\n                left: 'center'\n            },\n            toolbox: {\n                show: true,\n                orient: 'vertical',\n                left: 'right',\n                top: 'center',\n                feature: {\n                    dataZoom: {\n                        show: false,\n                        title: {\n                            zoom: 'Area zooming',\n                            back: 'Restore area zooming'\n                        }\n                    }\n                }\n            },\n            tooltip: {\n                trigger: 'item'\n            },\n            visualMap: {\n                left: 'left',\n                min: 50,\n                max: 10000,\n                inRange: {\n                    color: ['#f5f5f5', '#a50026']\n                },\n                text: ['50', '1 000'],\n                calculable: true\n            },\n            series: [\n                {\n                    name: 'Confirmed cases / 1 mil. pop.',\n                    type: 'map',\n                    mapType: 'world',\n                    roam: 'move',\n                    zoom: 1.1,\n                    emphasis: {itemStyle: {areaColor: 'yellow'}},\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: false\n                        }\n                    },\n                    data: mapData\n                }\n            ]\n        };\n\n        function countryLink(countryName) {\n            return <a href={\"#/\" + countryName} target=\"_blank\" rel=\"noopener noreferrer\">{countryName}</a>;\n        }\n\n        function sortCaret(order) {\n            if (!order) return (<span className=\"order\">&nbsp;</span>);\n            else if (order === 'asc') return (<span className=\"caret-asc\">&nbsp;</span>);\n            else if (order === 'desc') return (<span className=\"caret-desc\">&nbsp;</span>);\n            return null;\n        }\n\n        const {ToggleList} = ColumnToggle;\n\n        const columns = [{\n            dataField: 'name',\n            text: 'Country',\n            sort: true,\n            filter: textFilter({\n                placeholder: 'filter',\n                style: {\n                    backgroundColor: '#f5f5f5',\n                    border: 0,\n                    margin: 5,\n                    color: '#d3d3d3',\n                    fontStyle: 'italic'\n                }\n            }),\n            align: 'left',\n            formatter: countryLink,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.confirmed.total',\n            text: 'Total cases',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.confirmed.total1Mil',\n            text: 'Total cases/1M pop.',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.confirmed.new',\n            text: 'New cases',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.confirmed.new1Mil',\n            text: 'New cases/1M pop.',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.active.total',\n            text: 'Active cases',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.active.total1Mil',\n            text: 'Active cases/1M pop.',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.deaths.total',\n            text: 'Total deceased',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.deaths.total1Mil',\n            text: 'Deceased/1M pop.',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.deaths.new',\n            text: 'Deceased new',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.deaths.new1Mil',\n            text: 'Deceased new/1M pop.',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.recovered.total',\n            text: 'Recovered',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'summary.recovered.new',\n            text: 'Recovered new',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }, {\n            dataField: 'population',\n            text: 'Population',\n            sort: true,\n            align: 'right',\n            formatter: Utils.formattedNumber,\n            sortCaret: sortCaret\n        }];\n\n        const defaultSorted = [{\n            dataField: 'summary.confirmed.total',\n            order: 'desc'\n        }];\n\n        return (\n            <Container fluid>\n                <Row className=\"justify-content-between header\">\n                    <Col className=\"text-left\"><h1>COVID-19</h1></Col>\n                    <Col className=\"text-right\"><a href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\"\n                                                   rel=\"noopener noreferrer\">data source</a></Col>\n                </Row>\n                <hr/>\n                <Container fluid id=\"summary\">\n                    <CardDeck>\n                        <Card>\n                            <Card.Header\n                                style={{backgroundColor: Utils.CONFIRMED_COLOR, color: \"#333\"}}>Confirmed</Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    {Utils.formattedNumber(world.summary.confirmed.total)}<br/>&nbsp;<br/>&nbsp;\n                                </Card.Title>\n                                <ResponsiveContainer height={30}>\n                                    <AreaChart data={world.timeline} style={{margin: \"0 auto\"}}>\n                                        <Area dataKey=\"confirmedNew\" stroke=\"none\" fill={Utils.CONFIRMED_COLOR}/>\n                                    </AreaChart>\n                                </ResponsiveContainer>\n                            </Card.Body>\n                        </Card>\n                        <Card>\n                            <Card.Header\n                                style={{backgroundColor: Utils.ACTIVE_COLOR, color: \"#333\"}}>Active</Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    {Utils.formattedNumber(world.summary.active.total)}<br/><small\n                                    className=\"text-muted\">{activeRate}% out of total</small><br/>&nbsp;\n                                </Card.Title>\n                                <ResponsiveContainer height={30}>\n                                    <AreaChart data={world.timeline} style={{margin: \"0 auto\"}}>\n                                        <Area dataKey=\"activeTotal\" fill={Utils.ACTIVE_COLOR} stroke=\"none\"/>\n                                    </AreaChart>\n                                </ResponsiveContainer>\n                            </Card.Body>\n                        </Card>\n                        <Card>\n                            <Card.Header\n                                style={{backgroundColor: Utils.RECOVERED_COLOR, color: \"#333\"}}>Recovered</Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    {Utils.formattedNumber(world.summary.recovered.total)}<br/><small\n                                    className=\"text-muted\">{recoveredRateTotal}% out of total</small><br/><small\n                                    className=\"text-muted\">{recoveredRateClosed}% out of closed</small>\n                                </Card.Title>\n                                <ResponsiveContainer height={30}>\n                                    <AreaChart data={world.timeline} style={{margin: \"0 auto\"}}>\n                                        <Area dataKey=\"recoveredNew\" fill={Utils.RECOVERED_COLOR} stroke=\"none\"/>\n                                    </AreaChart>\n                                </ResponsiveContainer>\n                            </Card.Body>\n                        </Card>\n                        <Card>\n                            <Card.Header\n                                style={{backgroundColor: Utils.DECEASED_COLOR, color: \"#fff\"}}>Deceased</Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    {Utils.formattedNumber(world.summary.deaths.total)}<br/><small\n                                    className=\"text-muted\">{deathRateTotal}% out of total</small><br/><small\n                                    className=\"text-muted\">{deathRateClosed}% out of closed</small>\n                                </Card.Title>\n                                <ResponsiveContainer height={30}>\n                                    <AreaChart data={world.timeline} style={{margin: \"0 auto\"}}>\n                                        <Area dataKey=\"deathsNew\" fill={Utils.DECEASED_COLOR} stroke=\"none\"/>\n                                    </AreaChart>\n                                </ResponsiveContainer>\n                            </Card.Body>\n                        </Card>\n                    </CardDeck>\n                </Container>\n                <Container fluid id=\"charts\">\n                    <Card>\n                        <Card.Body>\n                            <ReactEcharts\n                                option={option || {}}\n                                style={{height: '550px', width: '100%'}}\n                                className='react_for_echarts'/>\n                            <CardDeck>\n                                <Card border=\"light\">\n                                    <Card.Body>\n                                        <ResponsiveContainer height={250}>\n                                            <ComposedChart data={world.timeline} style={{margin: \"0 auto\"}}\n                                                           fontSize={10}>\n                                                <XAxis dataKey=\"date\"/>\n                                                <YAxis/>\n                                                <CartesianGrid strokeDasharray=\"3 3\"/>\n                                                <Tooltip/>\n                                                <Legend verticalAlign=\"bottom\" height={36}/>\n                                                <Area name=\"total confirmed\" type=\"monotone\" dataKey=\"confirmedTotal\"\n                                                      stroke=\"none\"\n                                                      fillOpacity={0.5} fill={Utils.CONFIRMED_COLOR}/>\n                                                <Line name=\"total active\" dot={false} dataKey=\"activeTotal\"\n                                                      stroke={Utils.ACTIVE_COLOR} strokeWidth=\"2\"/>\n                                            </ComposedChart>\n                                        </ResponsiveContainer>\n                                    </Card.Body>\n                                </Card>\n                                <Card border=\"light\">\n                                    <Card.Body>\n                                        <ResponsiveContainer height={250}>\n                                            <BarChart width={730} height={250} data={world.timeline}\n                                                      style={{margin: \"0 auto\"}}>\n                                                <XAxis dataKey=\"date\"/>\n                                                <YAxis domain={[0, 'dataMax+1']}/>\n                                                <CartesianGrid strokeDasharray=\"3 3\"/>\n                                                <Tooltip/>\n                                                <Legend verticalAlign=\"bottom\" height={36}/>\n                                                <Bar name=\"daily confirmed\" type=\"monotone\" dataKey=\"confirmedNew\"\n                                                     stroke=\"none\"\n                                                     fill={Utils.CONFIRMED_COLOR}/>\n                                            </BarChart>\n                                        </ResponsiveContainer>\n                                    </Card.Body>\n                                </Card>\n                            </CardDeck>\n                        </Card.Body>\n                    </Card>\n                </Container>\n                <Container fluid id=\"countries\">\n                    <ToolkitProvider\n                        keyField='name'\n                        data={data}\n                        columns={columns}\n                        columnToggle>\n                        {\n                            props => (\n                                <div>\n                                    <ToggleList\n                                        contextual=\"light\"\n                                        {...props.columnToggleProps} />\n                                    <hr/>\n                                    <BootstrapTable\n                                        {...props.baseProps}\n                                        filter={filterFactory()}\n                                        hover\n                                        bordered={false}\n                                        defaultSorted={defaultSorted}\n                                    />\n                                </div>\n                            )\n                        }\n                    </ToolkitProvider>\n                    <div>Data source: <a\n                        href=\"https://github.com/CSSEGISandData/COVID-19\">https://github.com/CSSEGISandData/COVID-19</a>\n                    </div>\n                </Container>\n            </Container>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}