{"ast":null,"code":"import _classCallCheck from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Col,Container,Row}from\"react-bootstrap\";import Utils from\"./utils\";import rawData from'./data/romania_graphs_ro.json';import{Area,AreaChart,Bar,BarChart,Brush,ComposedChart,Line,LineChart,ResponsiveContainer,Tooltip,XAxis,YAxis}from\"recharts\";import DataService from\"./data-service\";var Romania=/*#__PURE__*/function(_Component){_inherits(Romania,_Component);var _super=_createSuper(Romania);function Romania(){_classCallCheck(this,Romania);return _super.apply(this,arguments);}_createClass(Romania,[{key:\"render\",value:function render(){// calculate active cases\nrawData.covid_romania.forEach(function(day){var active=day.total_cases-day.total_recovered-day.total_deaths;var closed=day.total_recovered+day.total_deaths;day.total_active=active;day.percent_active=(active/day.total_cases*100).toFixed(1);day.percent_deceased_closed=(day.total_deaths/closed*100).toFixed(1);day.percent_deceased_total=(day.total_deaths/day.total_cases*100).toFixed(1);day.percent_recovered_closed=(day.total_recovered/closed*100).toFixed(1);day.percent_recovered_total=(day.total_recovered/day.total_cases*100).toFixed(1);day.percent_positive_tests_today=DataService.noNaN(parseInt(day.new_cases_today)/parseInt(day.new_tests_today)*100).toFixed(1);if(day.county_data){day.county_data.forEach(function(cty){cty.cases_1_k_pop=(cty.total_cases/cty.county_population*1000).toFixed(1);});day.county_data.sort(function(a,b){return a.cases_1_k_pop<b.cases_1_k_pop?1:-1;});}});var lastDay=rawData.covid_romania[0];var timelineData=rawData.covid_romania.reverse();var counties=[];// create initial county objects\nlastDay.county_data.forEach(function(cty){var ctyObj={county_id:cty.county_id,county_name:cty.county_name,county_population:cty.county_population,timeline:[]};counties.push(ctyObj);});// fill counties objects with timeline data\ncounties.forEach(function(county){timelineData.forEach(function(day){if(day.county_data){var ctyDay=day.county_data.find(function(c){return c.county_name===county.county_name;});county.timeline.push({reporting_date:day.reporting_date,total_cases:ctyDay.total_cases,cases_1_k_pop:ctyDay.cases_1_k_pop});}});// calculate new cases for each day\nvar day_before=0;county.timeline.forEach(function(day){day[\"new_cases\"]=day.total_cases-day_before;day_before=day.total_cases;});});return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-between header\"},/*#__PURE__*/React.createElement(Col,{className:\"text-left\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Romania\"))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{className:\"text-right\"},\"Last update: \",lastDay.reporting_date)),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{sm:6},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(ComposedChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Area,{name:\"confirmed\",type:\"monotone\",dataKey:\"total_cases\",stroke:\"none\",fillOpacity:0.5,fill:Utils.CONFIRMED_COLOR}),/*#__PURE__*/React.createElement(Area,{name:\"active\",dot:false,dataKey:\"total_active\",stroke:\"none\",fillOpacity:0.5,fill:Utils.ACTIVE_COLOR})))),/*#__PURE__*/React.createElement(Col,{sm:6},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(LineChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Line,{name:\"new cases\",type:\"monotone\",dataKey:\"new_cases_today\",dot:false,strokeWidth:2,stroke:Utils.CONFIRMED_COLOR}),/*#__PURE__*/React.createElement(Line,{name:\"new recovered\",type:\"monotone\",dataKey:\"new_recovered_today\",dot:false,strokeWidth:2,stroke:Utils.RECOVERED_COLOR}),/*#__PURE__*/React.createElement(Line,{name:\"new deceased\",type:\"monotone\",dataKey:\"new_deaths_today\",dot:false,strokeWidth:2,stroke:Utils.DECEASED_COLOR}))))),/*#__PURE__*/React.createElement(Row,{className:\"justify-content-between header\"},/*#__PURE__*/React.createElement(Col,{sm:3},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.total_cases)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"confirmed cases\"))),/*#__PURE__*/React.createElement(Col,{sm:3},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.total_active)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"active cases\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"fine\"},Utils.formattedNumber(lastDay.percent_active),\" %\"))),/*#__PURE__*/React.createElement(Col,{sm:3},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box \"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.total_deaths)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"deceased\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"fine\"},Utils.formattedNumber(lastDay.percent_deceased_closed),\" % out of closed, \",Utils.formattedNumber(lastDay.percent_deceased_total),\" % out of total\"))),/*#__PURE__*/React.createElement(Col,{sm:3},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box \"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.total_recovered)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"recovered\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"fine\"},Utils.formattedNumber(lastDay.percent_recovered_closed),\" % out of closed, \",Utils.formattedNumber(lastDay.percent_recovered_total),\" % out of total\")))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{sm:2},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.new_cases_today)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"confirmed new\"))),/*#__PURE__*/React.createElement(Col,{sm:10},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(BarChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Bar,{name:\"daily new cases\",type:\"monotone\",dataKey:\"new_cases_today\",stroke:\"none\",fill:Utils.CONFIRMED_COLOR}))))),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{sm:2},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.new_deaths_today)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"deceased new\"))),/*#__PURE__*/React.createElement(Col,{sm:10},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(BarChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Bar,{name:\"daily new deaths\",type:\"monotone\",dataKey:\"new_deaths_today\",stroke:\"none\",fillOpacity:0.6,fill:Utils.DECEASED_COLOR}))))),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{sm:2},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.intensive_care_right_now)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"serious cases\"))),/*#__PURE__*/React.createElement(Col,{sm:10},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(BarChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Bar,{name:\"ICU cases\",type:\"monotone\",dataKey:\"intensive_care_right_now\",stroke:\"none\",fillOpacity:1,fill:Utils.ACTIVE_COLOR}))))),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{sm:2},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.percent_positive_tests_today),\"%\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"new positive cases\"))),/*#__PURE__*/React.createElement(Col,{sm:10},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(ComposedChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{yAxisId:\"left\",orientation:\"left\",domain:[0,100]}),/*#__PURE__*/React.createElement(YAxis,{yAxisId:\"right\",orientation:\"right\",domain:[\"0, dataMax + 1000\"]}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Line,{name:\"percent of positive tests\",type:\"monotone\",yAxisId:\"left\",dataKey:\"percent_positive_tests_today\",strokeWidth:2,dot:false,fillOpacity:1,stroke:Utils.POSITIVITY_COLOR}),/*#__PURE__*/React.createElement(Bar,{name:\"case definition tests\",type:\"monotone\",yAxisId:\"right\",stackId:\"a\",dataKey:\"tests_for_case_definition\",stroke:\"none\",fillOpacity:0.5,fill:Utils.BRUSH_COLOR}),/*#__PURE__*/React.createElement(Bar,{name:\"on demand tests\",type:\"monotone\",yAxisId:\"right\",stackId:\"a\",dataKey:\"tests_upon_request\",stroke:\"none\",fillOpacity:0.7,fill:Utils.BRUSH_COLOR}),/*#__PURE__*/React.createElement(Bar,{name:\"previous tests reported today\",type:\"monotone\",yAxisId:\"right\",stackId:\"a\",dataKey:\"tests_done_before_today_and_reported_today\",stroke:\"none\",fillOpacity:0.9,fill:Utils.BRUSH_COLOR}),/*#__PURE__*/React.createElement(Line,{name:\"total tests\",type:\"monotone\",yAxisId:\"right\",dataKey:\"new_tests_today\",stroke:\"none\",fillOpacity:1,fill:Utils.ACTIVE_COLOR}))))),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{sm:2},/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},Utils.formattedNumber(lastDay.new_recovered_today)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"new recoveries\"))),/*#__PURE__*/React.createElement(Col,{sm:10},/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(BarChart,{data:timelineData,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Bar,{name:\"daily recoveries\",type:\"monotone\",dataKey:\"new_recovered_today\",stroke:\"none\",fillOpacity:1,fill:Utils.RECOVERED_COLOR}))))),/*#__PURE__*/React.createElement(\"hr\",null),lastDay.county_data.map(function(county,index){return/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\",key:index},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"summary-box county-box left\"},/*#__PURE__*/React.createElement(\"span\",{className:\"description county-name \"},county.county_name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"number\"},county.total_cases,\" (\",county.cases_1_k_pop,\" \\u2030)\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"total cases\"))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(BarChart,{data:counties.find(function(c){return c.county_name===county.county_name;}).timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\",domain:[\"0\",'dataMax+10']}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Bar,{name:\"confirmed\",type:\"monotone\",dataKey:\"new_cases\",stroke:\"none\",fillOpacity:0.5,fill:Utils.CONFIRMED_COLOR})))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ResponsiveContainer,{height:250},/*#__PURE__*/React.createElement(AreaChart,{data:counties.find(function(c){return c.county_name===county.county_name;}).timeline,style:{margin:\"0 auto\"}},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"reporting_date\"}),/*#__PURE__*/React.createElement(YAxis,{orientation:\"right\",domain:[\"0\",'dataMax+10']}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Brush,{dataKey:\"reporting_date\",travellerWidth:1,stroke:Utils.BRUSH_COLOR,fill:\"none\",height:20}),/*#__PURE__*/React.createElement(Area,{name:\"confirmed\",type:\"monotone\",dataKey:\"total_cases\",stroke:\"none\",fillOpacity:0.5,fill:Utils.CONFIRMED_COLOR})))));}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,{className:\"spaced-row\"},/*#__PURE__*/React.createElement(Col,{className:\"text-left\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#/\"},\"All countries\")),/*#__PURE__*/React.createElement(Col,{className:\"text-right\"},/*#__PURE__*/React.createElement(\"p\",null,\"Data sources:\"),/*#__PURE__*/React.createElement(\"a\",{href:\"https://www.graphs.ro\"},\"graphs.ro\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"a\",{href:\"https://stirioficiale.ro\"},\"stirioficiale.ro\"))));}}]);return Romania;}(Component);export{Romania as default};","map":{"version":3,"sources":["/Users/adrian.moldovan/repo/github.com/adimoldovan/covid-19/src/romania.jsx"],"names":["React","Component","Col","Container","Row","Utils","rawData","Area","AreaChart","Bar","BarChart","Brush","ComposedChart","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","DataService","Romania","covid_romania","forEach","day","active","total_cases","total_recovered","total_deaths","closed","total_active","percent_active","toFixed","percent_deceased_closed","percent_deceased_total","percent_recovered_closed","percent_recovered_total","percent_positive_tests_today","noNaN","parseInt","new_cases_today","new_tests_today","county_data","cty","cases_1_k_pop","county_population","sort","a","b","lastDay","timelineData","reverse","counties","ctyObj","county_id","county_name","timeline","push","county","ctyDay","find","c","reporting_date","day_before","margin","BRUSH_COLOR","CONFIRMED_COLOR","ACTIVE_COLOR","RECOVERED_COLOR","DECEASED_COLOR","formattedNumber","new_deaths_today","intensive_care_right_now","POSITIVITY_COLOR","new_recovered_today","map","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport Utils from \"./utils\";\nimport rawData from './data/romania_graphs_ro.json'\nimport {\n    Area,\n    AreaChart,\n    Bar,\n    BarChart,\n    Brush,\n    ComposedChart,\n    Line,\n    LineChart,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport DataService from \"./data-service\";\n\nexport default class Romania extends Component {\n    render() {\n        // calculate active cases\n        rawData.covid_romania.forEach(function (day) {\n            let active = day.total_cases - day.total_recovered - day.total_deaths\n            let closed = day.total_recovered + day.total_deaths\n            day.total_active = active;\n            day.percent_active = (active / day.total_cases * 100).toFixed(1);\n            day.percent_deceased_closed = (day.total_deaths / closed * 100).toFixed(1);\n            day.percent_deceased_total = (day.total_deaths / day.total_cases * 100).toFixed(1);\n            day.percent_recovered_closed = (day.total_recovered / closed * 100).toFixed(1);\n            day.percent_recovered_total = (day.total_recovered / day.total_cases * 100).toFixed(1);\n            day.percent_positive_tests_today = DataService.noNaN(parseInt(day.new_cases_today) / parseInt(day.new_tests_today) * 100).toFixed(1);\n\n            if (day.county_data) {\n                day.county_data.forEach(function (cty) {\n                    cty.cases_1_k_pop = (cty.total_cases / cty.county_population * 1000).toFixed(1);\n                });\n\n                day.county_data.sort((a, b) => (a.cases_1_k_pop < b.cases_1_k_pop) ? 1 : -1)\n            }\n        });\n\n        let lastDay = rawData.covid_romania[0]\n        let timelineData = rawData.covid_romania.reverse();\n\n        let counties = [];\n\n        // create initial county objects\n        lastDay\n            .county_data\n            .forEach(\n                function (cty) {\n                    let ctyObj = {\n                        county_id: cty.county_id,\n                        county_name: cty.county_name,\n                        county_population: cty.county_population,\n                        timeline: []\n                    }\n\n                    counties.push(ctyObj)\n                }\n            )\n        ;\n\n        // fill counties objects with timeline data\n        counties\n            .forEach(\n                function (county) {\n                    timelineData.forEach(function (day) {\n                        if (day.county_data) {\n                            let ctyDay = day.county_data.find(c => c.county_name === county.county_name);\n                            county.timeline.push(\n                                {\n                                    reporting_date: day.reporting_date,\n                                    total_cases: ctyDay.total_cases,\n                                    cases_1_k_pop: ctyDay.cases_1_k_pop\n                                }\n                            )\n                        }\n                    });\n                    // calculate new cases for each day\n                    let day_before = 0\n                    county.timeline.forEach(function (day) {\n                        day[\"new_cases\"] = day.total_cases - day_before\n                        day_before = day.total_cases\n                    })\n                }\n            )\n        ;\n\n        return (\n            <Container fluid>\n                <Row className=\"justify-content-between header\">\n                    <Col className=\"text-left\"><h1>Romania</h1></Col>\n                </Row>\n                <hr/>\n                <Row>\n                    <Col className=\"text-right\">Last update: {lastDay.reporting_date}</Col>\n                </Row>\n                {/* Top charts */}\n                <Row className=\"spaced-row\">\n                    <Col sm={6}>\n                        <ResponsiveContainer height={250}>\n                            <ComposedChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis orientation=\"right\"/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Area name=\"confirmed\" type=\"monotone\" dataKey=\"total_cases\"\n                                      stroke=\"none\"\n                                      fillOpacity={0.5} fill={Utils.CONFIRMED_COLOR}/>\n                                <Area name=\"active\" dot={false} dataKey=\"total_active\"\n                                      stroke=\"none\"\n                                      fillOpacity={0.5} fill={Utils.ACTIVE_COLOR}/>\n                            </ComposedChart>\n                        </ResponsiveContainer>\n                    </Col>\n                    <Col sm={6}>\n                        <ResponsiveContainer height={250}>\n                            <LineChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis orientation=\"right\"/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Line name=\"new cases\" type=\"monotone\" dataKey=\"new_cases_today\"\n                                      dot={false}\n                                      strokeWidth={2}\n                                      stroke={Utils.CONFIRMED_COLOR}/>\n                                <Line name=\"new recovered\" type=\"monotone\" dataKey=\"new_recovered_today\"\n                                      dot={false}\n                                      strokeWidth={2}\n                                      stroke={Utils.RECOVERED_COLOR}/>\n                                <Line name=\"new deceased\" type=\"monotone\" dataKey=\"new_deaths_today\"\n                                      dot={false}\n                                      strokeWidth={2}\n                                      stroke={Utils.DECEASED_COLOR}/>\n                            </LineChart>\n                        </ResponsiveContainer>\n                    </Col>\n                </Row>\n                {/* Summary boxes */}\n                <Row className=\"justify-content-between header\">\n                    <Col sm={3}>\n                        <div className=\"summary-box\">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.total_cases)}</span>\n                            <br/>\n                            <span className=\"description\">confirmed cases</span>\n                        </div>\n                    </Col>\n                    <Col sm={3}>\n                        <div className=\"summary-box\">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.total_active)}</span>\n                            <br/>\n                            <span className=\"description\">active cases</span>\n                            <br/>\n                            <span className=\"fine\">{Utils.formattedNumber(lastDay.percent_active)} %</span>\n                        </div>\n                    </Col>\n                    <Col sm={3}>\n                        <div className=\"summary-box \">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.total_deaths)}</span>\n                            <br/>\n                            <span className=\"description\">deceased</span>\n                            <br/>\n                            <span className=\"fine\">{Utils.formattedNumber(lastDay.percent_deceased_closed)} % out of closed, {Utils.formattedNumber(lastDay.percent_deceased_total)} % out of total</span>\n                        </div>\n                    </Col>\n                    <Col sm={3}>\n                        <div className=\"summary-box \">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.total_recovered)}</span>\n                            <br/>\n                            <span className=\"description\">recovered</span>\n                            <br/>\n                            <span className=\"fine\">{Utils.formattedNumber(lastDay.percent_recovered_closed)} % out of closed, {Utils.formattedNumber(lastDay.percent_recovered_total)} % out of total</span>\n                        </div>\n                    </Col>\n                </Row>\n                <hr/>\n                {/* Main charts */}\n                <Row className=\"spaced-row\">\n                    <Col sm={2}>\n                        <div className=\"summary-box left\">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.new_cases_today)}</span>\n                            <br/>\n                            <span className=\"description\">confirmed new</span>\n                        </div>\n                    </Col>\n                    <Col sm={10}>\n                        <ResponsiveContainer height={250}>\n                            <BarChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis orientation=\"right\"/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Bar name=\"daily new cases\" type=\"monotone\" dataKey=\"new_cases_today\"\n                                     stroke=\"none\"\n                                     fill={Utils.CONFIRMED_COLOR}/>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </Col>\n                </Row>\n                <Row className=\"spaced-row\">\n                    <Col sm={2}>\n                        <div className=\"summary-box left\">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.new_deaths_today)}</span>\n                            <br/>\n                            <span className=\"description\">deceased new</span>\n                        </div>\n                    </Col>\n                    <Col sm={10}>\n                        <ResponsiveContainer height={250}>\n                            <BarChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis orientation=\"right\"/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Bar name=\"daily new deaths\" type=\"monotone\" dataKey=\"new_deaths_today\"\n                                     stroke=\"none\"\n                                     fillOpacity={0.6}\n                                     fill={Utils.DECEASED_COLOR}/>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </Col>\n                </Row>\n                <Row className=\"spaced-row\">\n                    <Col sm={2}>\n                        <div className=\"summary-box left\">\n                            <span className=\"number\">{Utils.formattedNumber(lastDay.intensive_care_right_now)}</span>\n                            <br/>\n                            <span className=\"description\">serious cases</span>\n                        </div>\n                    </Col>\n                    <Col sm={10}>\n                        <ResponsiveContainer height={250}>\n                            <BarChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis orientation=\"right\"/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Bar name=\"ICU cases\" type=\"monotone\" dataKey=\"intensive_care_right_now\"\n                                     stroke=\"none\"\n                                     fillOpacity={1}\n                                     fill={Utils.ACTIVE_COLOR}/>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </Col>\n                </Row>\n                <Row className=\"spaced-row\">\n                    <Col sm={2}>\n                        <div className=\"summary-box left\">\n                            <span\n                                className=\"number\">{Utils.formattedNumber(lastDay.percent_positive_tests_today)}%</span>\n                            <br/>\n                            <span className=\"description\">new positive cases</span>\n                        </div>\n                    </Col>\n                    <Col sm={10}>\n                        <ResponsiveContainer height={250}>\n                            <ComposedChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis yAxisId=\"left\" orientation=\"left\" domain={[0, 100]}/>\n                                <YAxis yAxisId=\"right\" orientation=\"right\" domain={[\"0, dataMax + 1000\"]}/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Line name=\"percent of positive tests\" type=\"monotone\"\n                                      yAxisId=\"left\"\n                                      dataKey=\"percent_positive_tests_today\"\n                                      strokeWidth={2}\n                                      dot={false}\n                                      fillOpacity={1}\n                                      stroke={Utils.POSITIVITY_COLOR}/>\n                                <Bar name=\"case definition tests\" type=\"monotone\"\n                                     yAxisId=\"right\"\n                                     stackId=\"a\"\n                                     dataKey=\"tests_for_case_definition\"\n                                     stroke=\"none\"\n                                     fillOpacity={0.5}\n                                     fill={Utils.BRUSH_COLOR}/>\n                                <Bar name=\"on demand tests\" type=\"monotone\"\n                                     yAxisId=\"right\"\n                                     stackId=\"a\"\n                                     dataKey=\"tests_upon_request\"\n                                     stroke=\"none\"\n                                     fillOpacity={0.7}\n                                     fill={Utils.BRUSH_COLOR}/>\n                                <Bar name=\"previous tests reported today\" type=\"monotone\"\n                                     yAxisId=\"right\"\n                                     stackId=\"a\"\n                                     dataKey=\"tests_done_before_today_and_reported_today\"\n                                     stroke=\"none\"\n                                     fillOpacity={0.9}\n                                     fill={Utils.BRUSH_COLOR}/>\n                                <Line name=\"total tests\" type=\"monotone\"\n                                      yAxisId=\"right\"\n                                      dataKey=\"new_tests_today\"\n                                      stroke=\"none\"\n                                      fillOpacity={1}\n                                      fill={Utils.ACTIVE_COLOR}/>\n                            </ComposedChart>\n                        </ResponsiveContainer>\n                    </Col>\n                </Row>\n                <Row className=\"spaced-row\">\n                    <Col sm={2}>\n                        <div className=\"summary-box left\">\n<span\n    className=\"number\">{Utils.formattedNumber(lastDay.new_recovered_today)}</span>\n                            <br/>\n                            <span className=\"description\">new recoveries</span>\n                        </div>\n                    </Col>\n                    <Col sm={10}>\n                        <ResponsiveContainer height={250}>\n                            <BarChart data={timelineData} style={{margin: \"0 auto\"}}>\n                                <XAxis dataKey=\"reporting_date\"/>\n                                <YAxis orientation=\"right\"/>\n                                <Tooltip/>\n                                <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                       fill=\"none\" height={20}/>\n                                <Bar name=\"daily recoveries\" type=\"monotone\"\n                                     dataKey=\"new_recovered_today\"\n                                     stroke=\"none\"\n                                     fillOpacity={1}\n                                     fill={Utils.RECOVERED_COLOR}/>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </Col>\n                </Row>\n                <hr/>\n                {/* Counties */}\n                {lastDay.county_data.map((county, index) => (\n                    <Row className=\"spaced-row\" key={index}>\n                        <Col>\n                            <div className=\"summary-box county-box left\">\n                                <span className=\"description county-name \">{county.county_name}</span>\n                                <br/>\n                                <span className=\"number\">{county.total_cases} ({county.cases_1_k_pop} &#8240;)</span>\n                                <br/>\n                                <span className=\"description\">total cases</span>\n                            </div>\n                        </Col>\n                        <Col>\n                            <ResponsiveContainer height={250}>\n                                <BarChart data={counties.find(c => c.county_name === county.county_name).timeline}\n                                          style={{margin: \"0 auto\"}}>\n                                    <XAxis dataKey=\"reporting_date\"/>\n                                    <YAxis orientation=\"right\" domain={[\"0\", 'dataMax+10']}/>\n                                    <Tooltip/>\n                                    <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                           fill=\"none\" height={20}/>\n                                    <Bar name=\"confirmed\" type=\"monotone\"\n                                         dataKey=\"new_cases\"\n                                         stroke=\"none\"\n                                         fillOpacity={0.5} fill={Utils.CONFIRMED_COLOR}/>\n                                </BarChart>\n                            </ResponsiveContainer>\n                        </Col>\n                        <Col>\n                            <ResponsiveContainer height={250}>\n                                <AreaChart data={counties.find(c => c.county_name === county.county_name).timeline}\n                                           style={{margin: \"0 auto\"}}>\n                                    <XAxis dataKey=\"reporting_date\"/>\n                                    <YAxis orientation=\"right\" domain={[\"0\", 'dataMax+10']}/>\n                                    <Tooltip/>\n                                    <Brush dataKey=\"reporting_date\" travellerWidth={1} stroke={Utils.BRUSH_COLOR}\n                                           fill=\"none\" height={20}/>\n                                    <Area name=\"confirmed\" type=\"monotone\"\n                                          dataKey=\"total_cases\"\n                                          stroke=\"none\"\n                                          fillOpacity={0.5} fill={Utils.CONFIRMED_COLOR}/>\n                                </AreaChart>\n                            </ResponsiveContainer>\n                        </Col>\n                    </Row>\n                ))}\n                <hr/>\n                {/* Footer */}\n                <Row className=\"spaced-row\">\n                    <Col className=\"text-left\">\n                        <a href=\"#/\">All countries</a>\n                    </Col>\n                    <Col className=\"text-right\"><p>Data sources:</p>\n                        <a href=\"https://www.graphs.ro\">graphs.ro</a><br/>\n                        <a href=\"https://stirioficiale.ro\">stirioficiale.ro</a>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}